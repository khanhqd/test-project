{"version":3,"sources":["redux/types/actions.tsx","assets/logo.svg","helpers/RequestHelper.tsx","redux/reducers/post.tsx","redux/reducers/user.tsx","redux/reducers/index.tsx","redux/Store.tsx","services/User.Service.tsx","components/Header/Header.tsx","services/Post.Service.tsx","components/VideoItem/VideoItem.tsx","pages/Home/components/ListVideo.tsx","helpers/TimeHelper.tsx","pages/ShareVideo/InputModal.tsx","pages/VideoPlayer/VideoPlayer.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserAction","PostAction","qs","require","md5","HOST","token","setToken","makeSignature","data","obj","ts","Date","getTime","args","Object","keys","sort","map","k","sign","join","toString","assign","stringify","JSON","querify","url","queryObject","newUrl","undefined","handleException","res","a","exception_code","Error","message","get","apiUrl","length","fetch","headers","response","json","success","notification","error","post","method","body","initialState","posts","total","email","state","action","type","RELOAD","user","UPDATE_INFO","LOG_OUT","persistConfig","key","storage","combinedReducers","combineReducers","reducers","persistedReducer","persistReducer","Store","createStore","applyMiddleware","persistor","persistStore","login","RequestHelper","dispatch","logout","Header","Layout","HeaderComp","props","useSelector","userEmail","useState","setEmail","password","setPassword","loading","setLoading","submitLogin","UserService","confirmLogout","Modal","confirm","content","onOk","okText","okButtonProps","danger","cancelButtonProps","hidden","xs","sm","md","align","src","logo","className","alt","Text","style","color","onClick","onPressShare","placeholder","value","onChange","e","target","Password","shareLink","getListPost","page","limit","offset","Paragraph","Typography","VideoItem","Item","extra","width","thumbnail","Meta","title","href","description","author","ellipsis","rows","youtubeId","ListVideo","itemLayout","size","pagination","PostService","pageSize","dataSource","renderItem","item","index","onClickVideo","taskRunOnceTimestamp","runOnceInTimestamp","waitDelay","miliseconds","Promise","resolve","setTimeout","runOnceIn","id","func","newTimestamp","InputModal","ref","Form","useForm","form","visible","setVisible","useImperativeHandle","showModal","resetFields","onCancel","onSubmit","values","TimeHelper","onShareSuccess","submit","footer","name","onFinish","label","rules","required","forwardRef","VideoPlayer","videoId","setVideoId","showVideo","setShowVideo","destroyOnClose","centered","onReady","event","opts","height","playerVars","autoplay","Home","inputModal","useRef","videoPlayer","useEffect","getData","current","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96db29fa.chunk.js","sourcesContent":["export enum UserAction {\n\tUPDATE_INFO = 'UPDATE_INFO',\n\tLOG_OUT = 'LOG_OUT'\n}\n\nexport enum PostAction {\n\tRELOAD = 'RELOAD'\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { notification } from 'antd';\n\nconst qs = require('qs');\nconst md5 = require('md5');\n\nexport const HOST = 'http://localhost:8081';\n\nconst SK = 'remitano-test-exam';\n\nclass RequestHelper {\n\ttoken = '';\n\n\tsetToken = (token: string) => {\n\t\tthis.token = token;\n\t}\n\n\tmakeSignature = (data: any) => {\n\t\tlet obj = { ...data };\n\t\tobj.ts = new Date().getTime();\n\t\tlet args = Object.keys(obj).sort().map((k) => { return obj[k]; });\n\t\tlet sign = md5(args.join('') + SK).toString();\n\t\treturn Object.assign(obj, { sign });\n\t}\n\n\tstringify = (obj: any) => {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tquerify = (url: string, queryObject: any) => {\n\t\tlet newUrl = url;\n\t\tif (queryObject === undefined) return newUrl;\n\t\tnewUrl += `?${qs.stringify(queryObject)}`;\n\t\treturn newUrl;\n\t}\n\n\thandleException = async (res: any) => {\n\t\tif (!res || !res.exception_code) throw new Error('Unknown API Error');\n\t\tthrow new Error(res.message);\n\t}\n\n\tget = async ({ url = '', data = {} }) => {\n\t\ttry {\n\t\t\tconst apiUrl = this.querify(HOST + url, (!data || Object.keys(data).length === 0) ? this.makeSignature({}) : this.makeSignature(data));\n\t\t\tconst response = await fetch(apiUrl, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"authorization\": this.token,\n\t\t\t\t},\n\t\t\t});\n\t\t\tlet res = await response.json();\n\t\t\tif (!res || !res.success) {\n\t\t\t\tawait this.handleException(res);\n\t\t\t}\n\t\t\treturn res?.data;\n\t\t} catch (err: any) {\n\t\t\tnotification.error({ message: err?.message || err.toString() })\n\t\t}\n\t}\n\n\tpost = async ({ url = '', data = {} }) => {\n\t\ttry {\n\t\t\tconst response = await fetch(HOST + url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"authorization\": this.token,\n\t\t\t\t},\n\t\t\t\tbody: this.stringify(this.makeSignature(data)),\n\t\t\t});\n\t\t\tlet res = await response.json();\n\t\t\tif (!res || !res.success) {\n\t\t\t\tawait this.handleException(res);\n\t\t\t}\n\t\t\treturn res?.data;\n\t\t} catch (err: any) {\n\t\t\tnotification.error({ message: err?.message || err.toString() })\n\t\t}\n\t}\n}\n\nexport default new RequestHelper();\n","import { PostAction } from '../types/actions';\nimport { IPostState } from '../types/post';\n\nconst initialState: IPostState = {\n\tposts: [],\n\ttotal: 0,\n}\n\nconst post = (state = initialState, action: any) => {\n\tswitch (action.type) {\n\t\tcase PostAction.RELOAD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.data,\n\t\t\t\ttotal: action.total\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default post;\n","import { UserAction } from '../types/actions';\nimport { IUserState } from '../types/user';\n\nconst initialState: IUserState = {\n\temail: '',\n\ttoken: '',\n}\n\nconst user = (state = initialState, action: any) => {\n\tswitch (action.type) {\n\t\tcase UserAction.UPDATE_INFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.data,\n\t\t\t};\n\t\tcase UserAction.LOG_OUT:\n\t\t\treturn initialState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default user;\n","import post from './post';\nimport user from './user';\n\nexport default {\n\tpost,\n\tuser,\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport reducers from './reducers'\n\nlet middlewares = [];\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\tmiddlewares.push(createLogger());\n}\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n};\n\nconst combinedReducers = combineReducers(reducers);\n\nconst persistedReducer = persistReducer(persistConfig, combinedReducers);\n\nconst Store = createStore(\n\tpersistedReducer,\n\tapplyMiddleware(...middlewares)\n)\n\nexport const persistor = persistStore(Store);\n\nexport default Store;\n","import RequestHelper from \"src/helpers/RequestHelper\";\nimport Store from \"src/redux/Store\";\nimport { UserAction } from \"src/redux/types/actions\";\n\nexport interface ILoginParams {\n\temail: string,\n\tpassword: string,\n}\n\nclass UserService {\n\tlogin = async (data: ILoginParams) => {\n\t\tlet res = await RequestHelper.post({\n\t\t\turl: '/api/login',\n\t\t\tdata\n\t\t})\n\t\tif (res) {\n\t\t\tStore.dispatch({\n\t\t\t\ttype: UserAction.UPDATE_INFO,\n\t\t\t\tdata: res\n\t\t\t});\n\t\t\tRequestHelper.setToken(res.token);\n\t\t}\n\t}\n\n\tlogout = async () => {\n\t\tStore.dispatch({\n\t\t\ttype: UserAction.LOG_OUT,\n\t\t})\n\t}\n}\n\nexport default new UserService();\n","import { Button, Col, Input, Layout, Modal, Row, Typography } from 'antd';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport logo from 'src/assets/logo.svg';\nimport UserService from 'src/services/User.Service';\nimport './styles.css';\n\nconst { Header } = Layout;\n\ninterface Props {\n\tonPressShare(): void,\n}\n\nconst HeaderComp = (props: Props) => {\n\tconst { token, email: userEmail } = useSelector(state => state.user);\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\n\tconst submitLogin = async () => {\n\t\tsetLoading(true);\n\t\tawait UserService.login({ email, password })\n\t\tsetLoading(false);\n\t}\n\n\tconst confirmLogout = () => {\n\t\tModal.confirm({\n\t\t\tcontent: 'Confirm to logout?',\n\t\t\tonOk: () => {\n\t\t\t\tUserService.logout();\n\t\t\t},\n\t\t\tokText: 'OK',\n\t\t\tokButtonProps: { danger: true },\n\t\t\tcancelButtonProps: { hidden: true },\n\t\t})\n\t}\n\n\tconst renderActions = () => {\n\t\tif (token) {\n\t\t\treturn (\n\t\t\t\t<div className=\"actions-container\">\n\t\t\t\t\t<Typography.Text style={{ color: 'white' }}>\n\t\t\t\t\t\t{userEmail}\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t<Button className=\"margin-horizontal-16\" onClick={props.onPressShare} type=\"primary\">\n\t\t\t\t\t\tShare a movie\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={confirmLogout}>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"actions-container\">\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder={'Email'} value={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Input.Password\n\t\t\t\t\tplaceholder={'Password'} value={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\tclassName=\"margin-horizontal-16\"\n\t\t\t\t/>\n\t\t\t\t<Button loading={loading} onClick={submitLogin} type=\"primary\">\n\t\t\t\t\tLogin / Register\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Header>\n\t\t\t<Row>\n\t\t\t\t<Col xs={0} sm={0} md={10}>\n\t\t\t\t\t<Row align=\"middle\">\n\t\t\t\t\t\t<img src={logo} className=\"appLogo\" alt=\"logo\" />\n\t\t\t\t\t\t<span className=\"appName\">Funny Movies</span>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={24} md={14} className=\"right-box-container\">\n\t\t\t\t\t{renderActions()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Header>\n\t)\n}\n\nexport default HeaderComp;\n","import RequestHelper from \"src/helpers/RequestHelper\";\nimport Store from \"src/redux/Store\";\nimport { PostAction } from \"src/redux/types/actions\";\n\nclass PostService {\n\tshareLink = async (url: string) => {\n\t\tlet res = await RequestHelper.post({\n\t\t\turl: '/api/posts/create',\n\t\t\tdata: {\n\t\t\t\turl\n\t\t\t}\n\t\t})\n\t\treturn res;\n\t}\n\n\tgetListPost = async (page = 1) => {\n\t\tlet res = await RequestHelper.get({\n\t\t\turl: '/api/posts',\n\t\t\tdata: {\n\t\t\t\tlimit: 10,\n\t\t\t\toffset: (page - 1) * 10\n\t\t\t}\n\t\t})\n\t\tif (res) {\n\t\t\tStore.dispatch({\n\t\t\t\ttype: PostAction.RELOAD,\n\t\t\t\tdata: res.data,\n\t\t\t\ttotal: res.total,\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default new PostService();\n","\nimport { List, Typography } from 'antd';\nimport { IPostItem } from 'src/redux/types/post';\nimport './styles.css';\n\nconst { Paragraph } = Typography;\n\ninterface Props extends IPostItem {\n\tonClick(): void,\n}\n\nconst VideoItem = (props: Props) => {\n\treturn (\n\t\t<List.Item\n\t\t\tonClick={props.onClick}\n\t\t\tkey={props.youtubeId}\n\t\t\textra={\n\t\t\t\t<img\n\t\t\t\t\twidth={272}\n\t\t\t\t\talt=\"thumnail\"\n\t\t\t\t\tsrc={props.thumbnail}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t<List.Item.Meta\n\t\t\t\ttitle={<a href={props.url} target=\"_blank\">{props.title}</a>}\n\t\t\t\tdescription={`Share by: ${props.author?.email}`}\n\t\t\t/>\n\t\t\t<Paragraph\n\t\t\t\tellipsis={{\n\t\t\t\t\trows: 4,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{props.description}\n\t\t\t</Paragraph>\n\t\t</List.Item>\n\t)\n}\n\nexport default VideoItem;\n","import { List } from 'antd';\nimport { useSelector } from 'react-redux';\nimport VideoItem from 'src/components/VideoItem/VideoItem';\nimport PostService from 'src/services/Post.Service';\n\ninterface Props {\n\tonClickVideo(videoId?: string): void\n}\n\nconst ListVideo = (props: Props) => {\n\tconst { posts, total } = useSelector(state => state.post);\n\n\treturn (\n\t\t<List\n\t\t\titemLayout=\"vertical\"\n\t\t\tsize=\"large\"\n\t\t\tpagination={{\n\t\t\t\tonChange: (page) => PostService.getListPost(page),\n\t\t\t\tpageSize: 10,\n\t\t\t\ttotal,\n\t\t\t}}\n\t\t\tdataSource={posts}\n\t\t\trenderItem={(item, index) => (\n\t\t\t\t<VideoItem\n\t\t\t\t\t{...item}\n\t\t\t\t\tkey={`video${index}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onClickVideo(item.youtubeId)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t)\n}\n\nexport default ListVideo;\n","let taskRunOnceTimestamp = {};\n\nclass TimeHelper {\n\tstate = {\n\t\trunOnceInTimestamp: 0,\n\t};\n\n\twaitDelay = (miliseconds: number) => new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(true);\n\t\t}, miliseconds);\n\t});\n\n\trunOnceIn = (id = 'null', miliseconds: number) => (func: any) => {\n\t\tlet newTimestamp = new Date().getTime();\n\t\tif (\n\t\t\t!taskRunOnceTimestamp[id] ||\n\t\t\tnewTimestamp - taskRunOnceTimestamp[id] > miliseconds\n\t\t) {\n\t\t\ttaskRunOnceTimestamp[id] = newTimestamp;\n\t\t\tif (typeof func === 'function') return func();\n\t\t}\n\t};\n}\n\nexport default new TimeHelper();\n","import { Input, Modal, Form, Button } from 'antd';\nimport { forwardRef, ForwardRefRenderFunction, useImperativeHandle, useState } from 'react';\nimport TimeHelper from 'src/helpers/TimeHelper';\nimport PostService from 'src/services/Post.Service';\n\nexport interface InputModalRef {\n\tshowModal(): void\n}\n\ninterface Props {\n\tonShareSuccess?(): void,\n}\n\nconst InputModal: ForwardRefRenderFunction<InputModalRef, Props> = (props, ref) => {\n\tconst [form] = Form.useForm();\n\tconst [visible, setVisible] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\n\tuseImperativeHandle(ref, () => ({\n\t\tshowModal: () => {\n\t\t\tsetVisible(true);\n\t\t\tform.resetFields();\n\t\t}\n\t}));\n\n\tconst onCancel = () => setVisible(false);\n\n\tconst onSubmit = async (values: any) => {\n\t\ttry {\n\t\t\tif (!values || !values['url-input']) return;\n\t\t\tsetLoading(true);\n\t\t\tawait TimeHelper.waitDelay(2000);\n\t\t\tlet res = await PostService.shareLink(values['url-input']);\n\t\t\tif (res) {\n\t\t\t\tprops.onShareSuccess && props.onShareSuccess();\n\t\t\t\tonCancel();\n\t\t\t}\n\t\t} catch (error: any) {\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle=\"Share movie\"\n\t\t\tvisible={visible}\n\t\t\tonOk={form.submit}\n\t\t\tonCancel={onCancel}\n\t\t\tfooter={[\n\t\t\t\t<Button key=\"submit\" type=\"primary\" loading={loading} onClick={form.submit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t]}\n\t\t>\n\t\t\t<Form form={form} name=\"time_related_controls\" onFinish={onSubmit}>\n\t\t\t\t<Form.Item\n\t\t\t\t\tname=\"url-input\"\n\t\t\t\t\tlabel=\"Youtube URL\"\n\t\t\t\t\trules={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tmessage: 'Please input URL'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"url\",\n\t\t\t\t\t\t\tmessage: \"This field must be a valid URL\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t<Input placeholder=\"Input youtube link to share\" />\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</Modal >\n\t)\n}\n\nexport default forwardRef(InputModal);\n","import { Modal, Spin } from 'antd';\nimport { forwardRef, ForwardRefRenderFunction, useImperativeHandle, useState } from 'react';\nimport YouTube from 'react-youtube';\n\nexport interface VideoPlayerRef {\n\tshowModal(videoId: string): void\n}\n\ninterface Props {\n\n}\n\nconst VideoPlayer: ForwardRefRenderFunction<VideoPlayerRef, Props> = (props, ref) => {\n\tconst [visible, setVisible] = useState(false);\n\tconst [videoId, setVideoId] = useState('');\n\tconst [showVideo, setShowVideo] = useState(false);\n\n\tuseImperativeHandle(ref, () => ({\n\t\tshowModal: (videoId) => {\n\t\t\tsetVideoId(videoId);\n\t\t\tsetVisible(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetShowVideo(true);\n\t\t\t}, 200);\n\t\t}\n\t}));\n\n\tconst onCancel = () => {\n\t\tsetVisible(false);\n\t\tsetShowVideo(false);\n\t\t// playerRef?.pauseVideo();\n\t}\n\n\tconst onReady = (event: any) => {\n\t\t// playerRef = event.target;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\tclassName={'video-player-wrap'}\n\t\t\tvisible={visible}\n\t\t\tdestroyOnClose={true}\n\t\t\twidth={660}\n\t\t\tfooter={null}\n\t\t\ttitle={null}\n\t\t\tcentered\n\t\t\tonCancel={onCancel}\n\t\t>\n\t\t\t{!showVideo\n\t\t\t\t? <Spin size=\"large\" />\n\t\t\t\t: <YouTube\n\t\t\t\t\tonReady={onReady}\n\t\t\t\t\tvideoId={videoId}\n\t\t\t\t\topts={{\n\t\t\t\t\t\theight: '360',\n\t\t\t\t\t\twidth: '640',\n\t\t\t\t\t\tplayerVars: {\n\t\t\t\t\t\t\tautoplay: 1,\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t</Modal >\n\t)\n}\n\nexport default forwardRef(VideoPlayer);\n","import { Layout } from 'antd';\nimport React, { useEffect, useRef } from 'react';\nimport HeaderComp from 'src/components/Header/Header';\nimport PostService from 'src/services/Post.Service';\nimport ListVideo from './components/ListVideo';\nimport InputModal, { InputModalRef } from '../ShareVideo/InputModal';\nimport VideoPlayer, { VideoPlayerRef } from '../VideoPlayer/VideoPlayer';\nimport './styles.css';\n\ninterface Props {\n\n}\n\nconst Home: React.FunctionComponent = (props: Props) => {\n\tconst inputModal = useRef<InputModalRef>(null);\n\tconst videoPlayer = useRef<VideoPlayerRef>(null);\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\tconst getData = async () => {\n\t\tPostService.getListPost();\n\t}\n\n\tconst onPressShare = () => {\n\t\tinputModal.current?.showModal()\n\t}\n\n\tconst onClickVideo = (id: string) => {\n\t\tif (id) videoPlayer.current?.showModal(id);\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Layout>\n\t\t\t\t<HeaderComp onPressShare={onPressShare} />\n\t\t\t\t<div className=\"contentContainer\">\n\t\t\t\t\t<ListVideo onClickVideo={onClickVideo} />\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t\t<InputModal ref={inputModal} onShareSuccess={getData} />\n\t\t\t<VideoPlayer ref={videoPlayer} />\n\t\t</div>\n\t)\n}\n\nexport default Home;\n","import Home from './pages/Home/Home';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport Store, { persistor } from './redux/Store';\nimport { Spin } from 'antd';\n\nfunction App() {\n\treturn (\n\t\t<Provider store={Store}>\n\t\t\t<PersistGate loading={<Spin />} persistor={persistor}>\n\t\t\t\t<Home />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}